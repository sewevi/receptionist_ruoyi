<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.receptionist.mapper.TStoreAllocationMapper">
    
    <resultMap type="TStoreAllocation" id="TStoreAllocationResult">
        <result property="id"    column="id"    />
        <result property="orderId"    column="order_id"    />
        <result property="storeId"    column="store_id"    />
        <result property="storeName"    column="store_name"    />
        <result property="storeCount"    column="store_count"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectTStoreAllocationVo">
        select id, order_id, store_id, store_name, store_count, create_by, create_time, update_by, update_time, remark from t_store_allocation
    </sql>

    <select id="selectTStoreAllocationList" parameterType="TStoreAllocation" resultMap="TStoreAllocationResult">
        <include refid="selectTStoreAllocationVo"/>
        <where>  
            <if test="orderId != null "> and order_id = #{orderId}</if>
            <if test="storeId != null "> and store_id = #{storeId}</if>
            <if test="storeName != null  and storeName != ''"> and store_name like concat('%', #{storeName}, '%')</if>
            <if test="storeCount != null  and storeCount != ''"> and store_count = #{storeCount}</if>
        </where>
    </select>
    
    <select id="selectTStoreAllocationById" parameterType="Long" resultMap="TStoreAllocationResult">
        <include refid="selectTStoreAllocationVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertTStoreAllocation" parameterType="TStoreAllocation">
        insert into t_store_allocation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="orderId != null">order_id,</if>
            <if test="storeId != null">store_id,</if>
            <if test="storeName != null">store_name,</if>
            <if test="storeCount != null">store_count,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="orderId != null">#{orderId},</if>
            <if test="storeId != null">#{storeId},</if>
            <if test="storeName != null">#{storeName},</if>
            <if test="storeCount != null">#{storeCount},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateTStoreAllocation" parameterType="TStoreAllocation">
        update t_store_allocation
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderId != null">order_id = #{orderId},</if>
            <if test="storeId != null">store_id = #{storeId},</if>
            <if test="storeName != null">store_name = #{storeName},</if>
            <if test="storeCount != null">store_count = #{storeCount},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTStoreAllocationById" parameterType="Long">
        delete from t_store_allocation where id = #{id}
    </delete>

    <delete id="deleteTStoreAllocationByIds" parameterType="String">
        delete from t_store_allocation where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>